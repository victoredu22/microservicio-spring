# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  - feature-ms-victorCurilao-mensaje

pool:
  vmImage: ubuntu-latest

steps:
  - script: |
      git fetch --unshallow
    displayName: "convert to non-shallow clone"

  - task: Gradle@3
    displayName: "Run test"
    inputs:
      gradleWrapperFile: "gradlew"
      publishJUnitResults: true
      testResultsFiles: "*/TEST-.xml"
      javaHomeOption: "JDKVersion"
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false

  - task: PublishCodeCoverageResults@1
    inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
        pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
        reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test'
        failIfCoverageEmpty: true
    displayName: Publicacion de resultados de jacoco

  - task: Gradle@3
    inputs:
      gradleWrapperFile: "gradlew"
      tasks: "build"
      publishJUnitResults: true
      javaHomeOption: "JDKVersion"
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: Build

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: "sonarcloud"
      organization: "victoredu22"
      projectKey: "victoredu22_microservicio-spring"
      projectName: "microservicio-spring"
      extraProperties: "sonar.exclusions=src/main/java/com/example/testingweb/GretingService.java"
    displayName: "SonarCloud Prepare"

  - task: Gradle@3
    inputs:
      gradleWrapperFile: "gradlew"
      tasks: "sonarqube"
      publishJUnitResults: false
      javaHomeOption: "JDKVersion"
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: "specify"
      sonarQubeGradlePluginVersion: "3.3"
      spotBugsAnalysis: false
  - task: Docker@2
    inputs:
      containerRegistry: "dockerVictor"
      command: "login"

  - task: Docker@2
    inputs:
      containerRegistry: "dockerVictor"
      repository: "victorcuri/microservicio"
      command: "build"
      Dockerfile: "**/Dockerfile"

  - task: Docker@2
    inputs:
      containerRegistry: "dockerVictor"
      repository: "victorcuri/microservicio"
      command: "push"
